{"version":3,"sources":["index.js"],"names":["Game","props","get_ul","rows","i","state","history","length","push","get_button","buttons","numButton","onClick","button_click","fizzButton","buzzButton","fizzBuzzButton","get_status","status","restart","buttonNumber","pItem","count","setState","className","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iOAIMA,E,kDACF,WAAaC,GAAQ,IAAD,8BAChB,cAAMA,IAOVC,OAAS,WAEL,IADA,IAAIC,EAAO,GACFC,EAAE,EAAGA,EAAI,EAAKC,MAAMC,QAAQC,OAAQH,IACzCD,EAAKK,KAAK,6BAAa,EAAKH,MAAMC,QAAQF,IAAvBA,IAEvB,OAAO,6BAAKD,KAbI,EAgBpBM,WAAa,WACT,IAAIC,EAAU,GAEVC,EAAY,wBAAQC,QAAS,kBAAM,EAAKC,aAAa,IAAzC,SAA8C,EAAKR,MAAMC,QAAQC,OAAS,IACtFO,EAAa,wBAAQF,QAAS,kBAAM,EAAKC,aAAa,IAAzC,kBACbE,EAAa,wBAAQH,QAAS,kBAAM,EAAKC,aAAa,IAAzC,kBACbG,EAAiB,wBAAQJ,QAAS,kBAAM,EAAKC,aAAa,IAAzC,sBAIrB,OAFAH,EAAQF,KAAKG,EAAWG,EAAYC,EAAYC,GAEzCN,GA1BS,EA6BpBO,WAAa,WACT,OAAyB,GAArB,EAAKZ,MAAMa,OACJ,yCAEA,CAAC,qDAA8B,wBAAQN,QAAS,kBAAM,EAAKO,WAA5B,uBAjC1B,EAqCpBN,aAAe,SAACO,GACZ,IAAIC,EAAQ,GACRC,EAAQ,EAAKjB,MAAMC,QAAQC,OAAS,EAGpCe,EAAQ,IAAM,EACM,GAAhBF,IACAC,EAAQ,YAELC,EAAQ,GAAK,EACA,GAAhBF,IACAC,EAAQ,QAELC,EAAQ,GAAK,EACA,GAAhBF,IACAC,EAAQ,QAEW,GAAhBD,IACPC,EAAQC,GAGa,GAArB,EAAKjB,MAAMa,SACE,IAATG,GACA,EAAKhB,MAAMC,QAAQE,KAAKa,GACxB,EAAKE,SAAS,CACVjB,QAAS,EAAKD,MAAMC,YAGxBe,EAAQ,QACR,EAAKhB,MAAMC,QAAQE,KAAKa,GACxB,EAAKE,SAAS,CACVjB,QAAS,EAAKD,MAAMC,QACpBY,QAAQ,OArEJ,EA4EpBC,QAAU,WACN,EAAKI,SAAS,CACVjB,QAAS,GACTY,QAAQ,KA7EZ,EAAKb,MAAQ,CACTC,QAAS,GACTY,QAAQ,GAJI,E,0CAmFpB,WACI,OACI,gCACI,qBAAKM,UAAU,iBAAf,SACKC,KAAKhB,eAEV,qBAAKe,UAAU,QAAf,SACKC,KAAKvB,WAEV,qBAAKsB,UAAU,SAAf,SACKC,KAAKR,sB,GA9FPS,IAAMC,WAuGzBC,IAASC,OACL,cAAC7B,EAAD,IACA8B,SAASC,eAAe,W","file":"static/js/main.e1dbee62.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass Game extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [],\r\n            status: true,\r\n        };\r\n    }\r\n\r\n    get_ul = () => {\r\n        var rows = [];\r\n        for (var i=0; i < this.state.history.length; i++) {\r\n            rows.push(<li key={i}>{this.state.history[i]}</li>);\r\n        }\r\n        return <ul>{rows}</ul>;\r\n    }\r\n\r\n    get_button = () => {\r\n        var buttons = [];\r\n        \r\n        let numButton = <button onClick={() => this.button_click(1)}>{this.state.history.length + 1}</button>;\r\n        let fizzButton = <button onClick={() => this.button_click(2)}>Fizz</button>;\r\n        let buzzButton = <button onClick={() => this.button_click(3)}>Buzz</button>;\r\n        let fizzBuzzButton = <button onClick={() => this.button_click(4)}>FizzBuzz</button>;\r\n\r\n        buttons.push(numButton, fizzButton, buzzButton, fizzBuzzButton);\r\n\r\n        return buttons;\r\n    }\r\n\r\n    get_status = () => {\r\n        if (this.state.status == true) {\r\n            return <h1>PLAYING</h1>\r\n        }   else {\r\n            return [<h1>YOU JUST GOT BUZZED</h1>, <button onClick={() => this.restart()}>RESTART</button>]\r\n        }\r\n    }\r\n\r\n    button_click = (buttonNumber) => {\r\n        var pItem = '';\r\n        var count = this.state.history.length + 1\r\n\r\n\r\n        if (count % 15 == 0) {\r\n            if (buttonNumber == 4) {\r\n                pItem = 'FizzBuzz';\r\n            }\r\n        } else if (count % 5 == 0) {\r\n            if (buttonNumber == 3) {\r\n                pItem = 'Buzz';\r\n            }\r\n        } else if (count % 3 == 0) {\r\n            if (buttonNumber == 2) {\r\n                pItem = 'Fizz';\r\n            }\r\n        } else if (buttonNumber == 1) {\r\n            pItem = count;\r\n        }\r\n\r\n        if (this.state.status == true) {\r\n            if (pItem != '') {\r\n                this.state.history.push(pItem);\r\n                this.setState({\r\n                    history: this.state.history\r\n                });\r\n            } else {\r\n                pItem = 'WRONG'\r\n                this.state.history.push(pItem);\r\n                this.setState({\r\n                    history: this.state.history,\r\n                    status: false\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    restart = () => {\r\n        this.setState({\r\n            history: [],\r\n            status: true\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div> \r\n                <div className=\"buttons center\">\r\n                    {this.get_button()}\r\n                </div>\r\n                <div className=\"moves\">\r\n                    {this.get_ul()}\r\n                </div>\r\n                <div className=\"center\">\r\n                    {this.get_status()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game/>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}